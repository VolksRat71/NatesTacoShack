{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/chefs.js"],"names":["PaginationStyles","styled","div","Pagination","pageCount","currentPage","base","prevPage","nextPage","disablePrevPage","disableNextPage","title","disabled","to","className","Array","from","length","map","_","i","key","PaginationLayout","props","children","ChefsGrid","SingleChef","ChefPage","pageContext","chefs","data","allSanityPerson","SEO","id","name","description","current","slug","fluid","image","asset","query"],"mappings":"sPAIMA,EAAmBC,IAAOC,IAAV,+EAAGD,CAAH,0fAkCtB,SAASE,EAAT,GAII,IAHAC,EAGD,EAHCA,UACAC,EAED,EAFCA,YACAC,EACD,EADCA,KAGMC,EAAWF,EAAc,EACzBG,EAAWH,EAAc,EACzBI,EAAkC,IAAhBJ,EAClBK,EAAkBF,EAAWJ,EAEnC,OACI,kBAACJ,EAAD,KACI,kBAAC,IAAD,CACIW,MAAM,YACNC,SAAUH,EACVI,GAAOP,EAAL,IAAaC,GAHnB,MAKO,0BAAMO,UAAU,QAAhB,SAENC,MAAMC,KAAK,CAAEC,OAAQb,IAAac,KAAI,SAACC,EAAGC,GAAJ,OACnC,kBAAC,IAAD,CAAMC,IAAKD,EAAGP,GAAOP,EAAL,KAAac,EAAI,IAAMA,EAAI,MAE/C,kBAAC,IAAD,CACIT,MAAM,YACNC,SAAUF,EACVG,GAAOP,EAAL,IAAaE,GAEf,0BAAMM,UAAU,QAAhB,QALJ,OAWG,SAASQ,EAAiBC,GACrC,OACI,oCACI,kBAACpB,EAAeoB,GACfA,EAAMC,SACP,kBAACrB,EAAeoB,I,gBCtEtBE,EAAYxB,IAAOC,IAAV,sEAAGD,CAAH,sFAMTyB,EAAazB,IAAOC,IAAV,uEAAGD,CAAH,6UAyBD,SAAS0B,EAAT,GAGX,IAAD,IAFCC,YAAexB,EAEhB,EAFgBA,UAAWC,EAE3B,EAF2BA,YACCwB,EAC5B,EADCC,KAAQC,gBAAmBF,MAE3B,OACI,oCACI,kBAACG,EAAA,EAAD,CAAKrB,MAAK,gBAAkBN,IAC5B,kBAAC,EAAD,CACID,UAAWA,EACXC,YAAaA,EACbC,KAAK,UAEL,kBAACmB,EAAD,KACKI,EAAMX,KAAI,gBACPe,EADO,EACPA,GAAIC,EADG,EACHA,KAAMC,EADH,EACGA,YACFC,EAFD,EAEPC,KAAQD,QACUE,EAHX,EAGPC,MAASC,MAASF,MAHX,OAKP,kBAACZ,EAAD,CAAYL,IAAKY,GACb,kBAAC,IAAD,CAAMpB,GAAE,UAAYuB,GAChB,4BAAI,0BAAMtB,UAAU,QAAQoB,IAC5B,kBAAC,IAAD,CAAKI,MAAOA,KAEhB,uBAAGxB,UAAU,eAAeqB,UASjD,IAAMM,EAAK","file":"component---src-pages-chefs-js-aea8b76ff76cc7d4b034.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationStyles = styled.div`\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    border: 1px solid var(--grey);\r\n    margin: 2rem 0;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    & > * {\r\n        padding: 1rem;\r\n        flex: 1;\r\n        border-right: 1px solid var(--grey);\r\n        border-left: 1px solid var(--grey);\r\n        text-decoration: none;\r\n        &[aria-current],\r\n        .current {\r\n            border: 1px solid var(--purple);\r\n            transform: scale(1.02);\r\n            box-shadow: 0 2px 5px rgba(0,0,0,0.5);\r\n        }\r\n        &[disabled] {\r\n            pointer-events: none;\r\n            color: var(--grey);\r\n        }\r\n    }\r\n    @media (max-width: 800px) {\r\n        .word {\r\n            display: none;\r\n        }\r\n        font-size: 1.4rem;\r\n    }\r\n`;\r\n\r\nfunction Pagination({\r\n    pageCount,\r\n    currentPage,\r\n    base\r\n}) {\r\n\r\n    const prevPage = currentPage - 1;\r\n    const nextPage = currentPage + 1;\r\n    const disablePrevPage = currentPage === 1;\r\n    const disableNextPage = nextPage > pageCount;\r\n\r\n    return (\r\n        <PaginationStyles>\r\n            <Link\r\n                title=\"Prev Page\"\r\n                disabled={disablePrevPage}\r\n                to={`${base}/${prevPage}`}\r\n            >\r\n                ←  <span className=\"word\">Prev</span>\r\n            </Link>\r\n            {Array.from({ length: pageCount }).map((_, i) => (\r\n                <Link key={i} to={`${base}/${i + 1}`}>{i + 1}</Link>\r\n            ))}\r\n            <Link\r\n                title=\"Next Page\"\r\n                disabled={disableNextPage}\r\n                to={`${base}/${nextPage}`}\r\n            >\r\n                <span className=\"word\">Next</span> →\r\n            </Link>\r\n        </PaginationStyles>\r\n    )\r\n}\r\n\r\nexport default function PaginationLayout(props) {\r\n    return (\r\n        <>\r\n            <Pagination {...props} />\r\n            {props.children}\r\n            <Pagination {...props} />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport Pagination from '../components/Pagination';\r\nimport SEO from '../components/SEO';\r\n\r\nconst ChefsGrid = styled.div`\r\n    display: grid;\r\n    gap: 2rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n`;\r\n\r\nconst SingleChef = styled.div`\r\n    .gatsby-image-wrapper {\r\n        height: 400px;\r\n    }\r\n    h2 {\r\n        transform: rotate(-2deg);\r\n        text-align: center;\r\n        font-size: 3rem;\r\n        margin-bottom: -2rem;\r\n        position: relative;\r\n        z-index: 2;\r\n    }\r\n    .description {\r\n        border: 0.1rem solid var(--purple);\r\n        background: var(--grey);\r\n        padding: 1rem;\r\n        margin: 2rem;\r\n        margin-top: -6rem;\r\n        z-index: 2;\r\n        position: relative;\r\n        transform: rotate(1deg);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport default function ChefPage({\r\n    pageContext: { pageCount, currentPage },\r\n    data: { allSanityPerson: { chefs } }\r\n}) {\r\n    return (\r\n        <>\r\n            <SEO title={`Chefs - Page ${currentPage}`} />\r\n            <Pagination\r\n                pageCount={pageCount}\r\n                currentPage={currentPage}\r\n                base='/chefs'\r\n            >\r\n                <ChefsGrid>\r\n                    {chefs.map(({\r\n                        id, name, description,\r\n                        slug: { current },\r\n                        image: { asset: { fluid } }\r\n                    }) => (\r\n                        <SingleChef key={id}>\r\n                            <Link to={`/chefs/${current}`}>\r\n                                <h2><span className=\"mark\">{name}</span></h2>\r\n                                <Img fluid={fluid} />\r\n                            </Link>\r\n                            <p className=\"description\">{description}</p>\r\n                        </SingleChef>\r\n                    ))}\r\n                </ChefsGrid>\r\n            </Pagination>\r\n        </>\r\n    )\r\n};\r\n\r\nexport const query = graphql`\r\n    query($skip: Int = 0, $pageSize: Int = 3) {\r\n        allSanityPerson(skip: $skip, limit: $pageSize) {\r\n            chefs: nodes {\r\n                name\r\n                id\r\n                description\r\n                slug {\r\n                    current\r\n                }\r\n                image {\r\n                    asset {\r\n                        fluid(maxWidth: 400){\r\n                            ...GatsbySanityImageFluid\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}